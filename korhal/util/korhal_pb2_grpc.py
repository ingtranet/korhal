# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!

from korhal.util import korhal_pb2 as korhal__pb2
import grpc

class TokenizerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Tokenize = channel.unary_unary(
        '/korhal.Tokenizer/Tokenize',
        request_serializer=korhal__pb2.TextRequest.SerializeToString,
        response_deserializer=korhal__pb2.TokensResponse.FromString,
        )
    self.SplitSentence = channel.unary_unary(
        '/korhal.Tokenizer/SplitSentence',
        request_serializer=korhal__pb2.TextRequest.SerializeToString,
        response_deserializer=korhal__pb2.TextsResponse.FromString,
        )


class TokenizerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Tokenize(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SplitSentence(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TokenizerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Tokenize': grpc.unary_unary_rpc_method_handler(
          servicer.Tokenize,
          request_deserializer=korhal__pb2.TextRequest.FromString,
          response_serializer=korhal__pb2.TokensResponse.SerializeToString,
      ),
      'SplitSentence': grpc.unary_unary_rpc_method_handler(
          servicer.SplitSentence,
          request_deserializer=korhal__pb2.TextRequest.FromString,
          response_serializer=korhal__pb2.TextsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'korhal.Tokenizer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
